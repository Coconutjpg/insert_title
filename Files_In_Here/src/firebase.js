import { initializeApp }from 'firebase/app'
import {
    getFirestore,collection,getDocs,doc,query,where,onSnapshot,addDoc
}from 'firebase/firestore'

import{
    getAuth,createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut,onAuthStateChanged, updateProfile
}from 'firebase/auth'

const firebaseConfig = {
    apiKey: "AIzaSyDpPjLSoraZzrcVFYNvNHYYOimsJMBjiNQ",
    authDomain: "give-a-little-7976d.firebaseapp.com",
    projectId: "give-a-little-7976d",
    storageBucket: "give-a-little-7976d.appspot.com",
    messagingSenderId: "646349516170",
    appId: "1:646349516170:web:dc194b6ca743b6a7e36c73",
    measurementId: "G-H6TQB4X0WK"
};

//Initialises the connection to the database
initializeApp(firebaseConfig)

//Gets a reference to the database
const db = getFirestore()

//Gets the authentication token and the current user
const auth = getAuth()
const user = auth.currentUser;

//console.log("user uid is: ",uid)
console.log(user)

//Gets a reference to the Products collection
const col_prodRef = collection(db,'Products')

//Prints all the relevant info about the products
getDocs(col_prodRef)
.then((snapshot) =>{
  let products = []
  snapshot.docs.forEach((doc)=>{ //iterates over all documents
    products.push({...doc.data(), id: doc.id}) //pushes the data from the doc onto the array as well as the document id. The three dots spread this information into an object in the array
  })
  console.log(products)
})
.catch(err=>{
  console.log(err.message)
})

function getCategoryProds(cat){
  //Gets a reference to the GPU Category
  const catDocRef = doc(db,'Categories',cat)
  //Query to get all products that are in the gaming category
  const q = query(collection(db,"Products"),where("prod_cats","==",catDocRef))

  const productDocsSnap = /*await*/ getDocs(q)
  .then((snapshot)=>{
    let products = []
    snapshot.docs.forEach((doc)=>{
      products.push({...doc.data(), id: doc.id})
    })
    console.log(products)
  })  
}


//signing up users
  //const signupForm = document.querySelector('.signup')
  //signupForm.addEventListener('submit', (e)=>{
  function signUp(e){
    e.preventDefault()
  
    //Gets all the users entered info
    const firstname = signupForm.first_name.value
    const lastname = signupForm.last_name.value
    const dob = signupForm.dob.value
    const mobile_number = signupForm.mobile_number.value
    const email = signupForm.email.value
    const password = signupForm.password.value
    
    //creates the user through firebases system
    createUserWithEmailAndPassword(auth,email,password)
    .then((cred)=>{
      //gets the id generated by firebase for that user
      const user_id = cred.user.uid
      console.log('user created: ', cred.user.uid)
      signupForm.reset()
      //Gives the firebase system a display name of the current user in case we want to use it in the future
      updateProfile(auth.currentUser,{
        displayName: firstname + " " + lastname
      })
      //Adds a document for that user with their firebase generated uid, so that we can link the firebase auth token to that user
      addDoc(collection(db,'Users'),{
        userID:user_id,
        firstName:firstname,
        lastName:lastname,
        DoB:dob,
        phoneNumber:mobile_number
      })
  
    })
    .catch((err)=>{
      console.log(err.message)
    })
  }


//logging out
//const logoutButton = document.querySelector('.logout')
//logoutButton.addEventListener('click',()=>{
function logOut(){
  signOut(auth)
  .then(()=>{
    console.log("user has logged out")
  })
  .catch((err)=>{
    console.log(err.message)
  })
}

//logging in
//const loginForm = document.querySelector('.login')
//loginForm.addEventListener('submit',(e)=>{
function logIn(emailText, pass, e){
  e.preventDefault()

  const email = emailText;
  const password = pass;
  console.log(email);
  signInWithEmailAndPassword(auth,email,password)
  .then((cred)=>{
    console.log('user logged in: ',cred.user.displayName)
  })
  .catch((err)=>{
    console.log(err.message)
  })
}

//subscribing to auth changes
onAuthStateChanged(auth,(user)=>{
  console.log('user status changed: ',user)
})

function test(name){
  console.log("hello "+ name);
}

export {test, logIn, logOut, getCategoryProds}

